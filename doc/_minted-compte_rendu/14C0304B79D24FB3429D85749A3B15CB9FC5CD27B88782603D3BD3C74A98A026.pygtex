\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}if ! defined(STRING\PYGZus{}HELPER\PYGZus{}H)}
\PYG{c+cp}{\PYGZsh{}define STRING\PYGZus{}HELPER\PYGZus{}H}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string.h\PYGZgt{}}

\PYG{k}{static} \PYG{k+kt}{bool} \PYG{n+nf}{strempty}\PYG{p}{(}\PYG{k}{const} \PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{str}\PYG{p}{)}
\PYG{c+c1}{// Mode d\PYGZsq{}emploi :}
\PYG{c+c1}{//    Retourne vrai si la chaîne de caractères est vide}
\PYG{c+c1}{//}
\PYG{c+c1}{// Contrat :}
\PYG{c+c1}{//    Retourne vrai si la chaîne de caractère ne contient aucun caractères, que des espaces ou si elle est nulle}
\PYG{c+c1}{//}
\PYG{c+c1}{// Algorithme :}
\PYG{c+c1}{//    Parcourt tous les caractères de la chaîne de caractère}
\PYG{c+c1}{//    Dès qu\PYGZsq{}un caractère différent d\PYGZsq{}une espace est rencontré, retourne faux}
\PYG{c+c1}{//    Si la chaîne de caractères ne contient aucun caractère ou que des espaces, retourne vrai}
\PYG{p}{\PYGZob{}}
  \PYG{k}{if}\PYG{p}{(}\PYG{n}{str} \PYG{o}{==} \PYG{k}{nullptr}\PYG{p}{)}
  \PYG{p}{\PYGZob{}}
    \PYG{k}{return} \PYG{n+nb}{true}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{strlen}\PYG{p}{(}\PYG{n}{str}\PYG{p}{);} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
  \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{str}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{!=} \PYG{l+s+sc}{\PYGZsq{} \PYGZsq{}}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
      \PYG{k}{return} \PYG{n+nb}{false}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{return} \PYG{n+nb}{true}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cp}{\PYGZsh{}endif}
\end{Verbatim}
